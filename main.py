"""
CatBot - Discord Voice Channel Management Bot
‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ö‡∏≠‡∏ó
"""
import discord
from discord.ext import commands
import os
import asyncio
from dotenv import load_dotenv

# Import modules
from config_manager import load_config
from voice_manager import VoiceChannelManager
from queue_processor import QueueProcessor
from commands import setup as setup_commands
from events import setup as setup_events

class CatBot(commands.Bot):
    """‡∏Ñ‡∏•‡∏≤‡∏™‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó"""
    
    def __init__(self):
        # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ intents
        intents = discord.Intents.default()
        intents.voice_states = True
        intents.guilds = True
        intents.message_content = True
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á bot instance
        super().__init__(
            command_prefix='!', 
            intents=intents, 
            help_command=None  # ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô help command ‡πÄ‡∏î‡∏¥‡∏°
        )
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á managers
        self.voice_manager = VoiceChannelManager(self)
        self.queue_processor = QueueProcessor(self, self.voice_manager)
    
    async def setup_hook(self):
        """‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô"""
        print("üîß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö...")
        
        # ‡πÇ‡∏´‡∏•‡∏î Cogs
        await setup_commands(self, self.voice_manager)
        await setup_events(self, self.voice_manager, self.queue_processor)
        
        print("‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô")

async def main():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ö‡∏≠‡∏ó"""
    # ‡πÇ‡∏´‡∏•‡∏î‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏à‡∏≤‡∏Å .env
    load_dotenv()
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö token
    token = os.getenv("DISCORD_TOKEN")
    if not token:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö DISCORD_TOKEN ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå .env")
        print("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå .env ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏° DISCORD_TOKEN=your_bot_token")
        return
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á bot instance
    bot = CatBot()
    
    print("üöÄ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ö‡∏≠‡∏ó...")
    
    try:
        # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ö‡∏≠‡∏ó
        async with bot:
            await bot.start(token)
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è ‡∏õ‡∏¥‡∏î‡∏ö‡∏≠‡∏ó‡πÇ‡∏î‡∏¢‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ")
    except Exception as e:
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ö‡∏≠‡∏ó‡πÑ‡∏î‡πâ: {e}")
    finally:
        print("üëã ‡∏ö‡∏≠‡∏ó‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß")

if __name__ == "__main__":
    # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ö‡∏≠‡∏ó
    asyncio.run(main())
