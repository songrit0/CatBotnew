"""
UI Components - ‡∏Ñ‡∏≠‡∏°‡πÇ‡∏û‡πÄ‡∏ô‡∏ô‡∏ï‡πå UI ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Discord (Views, Modals, Buttons)
"""
import discord
from discord.ui import View, Modal, TextInput, Button, Select
from config_manager import load_config, save_config

class VoiceChannelManagerView(View):
    """View ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Voice Channels"""
    
    def __init__(self, user_id, config):
        super().__init__(timeout=300)
        self.user_id = user_id
        self.config = config
        self.update_buttons()
    
    def update_buttons(self):
        """‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏õ‡∏∏‡πà‡∏°‡∏ï‡πà‡∏≤‡∏á‡πÜ"""
        self.clear_items()
        
        # ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ voice channels
        list_button = Button(
            label="üìã ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (List)",
            style=discord.ButtonStyle.primary
        )
        list_button.callback = self.list_channels
        self.add_item(list_button)
        
        # ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏° voice channel ‡πÉ‡∏´‡∏°‡πà
        add_button = Button(
            label="‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà (Add)",
            style=discord.ButtonStyle.green
        )
        add_button.callback = self.add_channel
        self.add_item(add_button)
        
        # ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç voice channel
        edit_button = Button(
            label="‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç (Edit)",
            style=discord.ButtonStyle.secondary
        )
        edit_button.callback = self.edit_channel
        self.add_item(edit_button)
        
        # ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏ö voice channel
        delete_button = Button(
            label="üóëÔ∏è ‡∏•‡∏ö (Delete)",
            style=discord.ButtonStyle.red
        )
        delete_button.callback = self.delete_channel
        self.add_item(delete_button)
    
    async def interaction_check(self, interaction):
        """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"""
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ", ephemeral=True)
            return False
        return True
    
    async def list_channels(self, interaction):
        """‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Voice Channels"""
        await interaction.response.defer()
        
        # ‡πÇ‡∏´‡∏•‡∏î config ‡πÉ‡∏´‡∏°‡πà
        current_config = load_config()
        
        embed = discord.Embed(
            title="üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Voice Channels",
            color=discord.Color.blue()
        )
        
        if not current_config['voice_channels']:
            embed.description = "‡πÑ‡∏°‡πà‡∏°‡∏µ voice channels ‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏ß‡πâ"
        else:
            description = ""
            for i, (channel_id, channel_data) in enumerate(current_config['voice_channels'].items(), 1):
                description += f"**{i}.** <#{channel_id}>\n"
                description += f"   ‚Ä¢ ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤‡∏á: `{channel_data['empty_name']}`\n"
                description += f"   ‚Ä¢ ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô: `{channel_data['occupied_name']}`\n\n"
            embed.description = description
        
        # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï config ‡πÉ‡∏ô view
        self.config = current_config
        
        await interaction.followup.edit_message(interaction.message.id, embed=embed, view=self)
    
    async def add_channel(self, interaction):
        """‡πÄ‡∏û‡∏¥‡πà‡∏° Voice Channel ‡πÉ‡∏´‡∏°‡πà"""
        await interaction.response.send_modal(AddChannelModal(self.user_id, self.config, self))
    
    async def edit_channel(self, interaction):
        """‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Voice Channel"""
        # ‡πÇ‡∏´‡∏•‡∏î config ‡πÉ‡∏´‡∏°‡πà
        current_config = load_config()
        
        if not current_config['voice_channels']:
            await interaction.response.send_message("‡πÑ‡∏°‡πà‡∏°‡∏µ voice channels ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç", ephemeral=True)
            return
        
        # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï config ‡πÉ‡∏ô view
        self.config = current_config
        
        await interaction.response.send_message(
            "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å voice channel ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:",
            view=EditChannelSelectView(self.user_id, self.config, self),
            ephemeral=True
        )
    
    async def delete_channel(self, interaction):
        """‡∏•‡∏ö Voice Channel"""
        # ‡πÇ‡∏´‡∏•‡∏î config ‡πÉ‡∏´‡∏°‡πà
        current_config = load_config()
        
        if not current_config['voice_channels']:
            await interaction.response.send_message("‡πÑ‡∏°‡πà‡∏°‡∏µ voice channels ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö", ephemeral=True)
            return
        
        # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï config ‡πÉ‡∏ô view
        self.config = current_config
        
        await interaction.response.send_message(
            "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å voice channel ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö:",
            view=DeleteChannelSelectView(self.user_id, self.config, self),
            ephemeral=True
        )

class AddChannelModal(Modal):
    """Modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏° Voice Channel ‡πÉ‡∏´‡∏°‡πà"""
    
    def __init__(self, user_id, config, parent_view):
        super().__init__(title="‡πÄ‡∏û‡∏¥‡πà‡∏° Voice Channel ‡πÉ‡∏´‡∏°‡πà", timeout=300)
        self.user_id = user_id
        self.config = config
        self.parent_view = parent_view
        
        self.channel_id = TextInput(
            label="Channel ID",
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å ID ‡∏Ç‡∏≠‡∏á voice channel",
            required=True
        )
        self.add_item(self.channel_id)
        
        self.empty_name = TextInput(
            label="‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤‡∏á (Empty Name)",
            placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏ô‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á",
            required=True
        )
        self.add_item(self.empty_name)
        
        self.occupied_name = TextInput(
            label="‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô (Occupied Name)",
            placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á",
            required=True
        )
        self.add_item(self.occupied_name)
    
    async def on_submit(self, interaction):
        """‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°"""
        try:
            channel_id = int(self.channel_id.value)
            empty_name = self.empty_name.value
            occupied_name = self.occupied_name.value
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ channel ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á
            channel = interaction.guild.get_channel(channel_id)
            if not channel or not isinstance(channel, discord.VoiceChannel):
                await interaction.response.send_message("‡πÑ‡∏°‡πà‡∏û‡∏ö voice channel ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏", ephemeral=True)
                return
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ channel ‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if str(channel_id) in self.config['voice_channels']:
                await interaction.response.send_message("Voice channel ‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
                return
            
            # ‡πÄ‡∏û‡∏¥‡πà‡∏° voice channel ‡πÉ‡∏´‡∏°‡πà
            self.config['voice_channels'][str(channel_id)] = {
                "empty_name": empty_name,
                "occupied_name": occupied_name
            }
            
            save_config(self.config)
            
            embed = discord.Embed(
                title="‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Voice Channel ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
                description=f"‡πÄ‡∏û‡∏¥‡πà‡∏° <#{channel_id}> ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß\n‚Ä¢ ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤‡∏á: `{empty_name}`\n‚Ä¢ ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô: `{occupied_name}`",
                color=discord.Color.green()
            )
            
            await interaction.response.send_message(embed=embed, ephemeral=True)
            
        except ValueError:
            await interaction.response.send_message("Channel ID ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô", ephemeral=True)
        except Exception as e:
            await interaction.response.send_message(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}", ephemeral=True)

class EditChannelSelectView(View):
    """View ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Voice Channel ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç"""
    
    def __init__(self, user_id, config, parent_view):
        super().__init__(timeout=60)
        self.user_id = user_id
        self.config = config
        self.parent_view = parent_view
        
        options = []
        for i, (channel_id, channel_data) in enumerate(config['voice_channels'].items()):
            options.append(discord.SelectOption(
                label=f"#{channel_id}",
                description=f"‡∏ß‡πà‡∏≤‡∏á: {channel_data['empty_name'][:50]}",
                value=channel_id
            ))
        
        select = Select(
            placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å voice channel ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç",
            options=options
        )
        select.callback = self.select_channel
        self.add_item(select)
    
    async def interaction_check(self, interaction):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ", ephemeral=True)
            return False
        return True
    
    async def select_channel(self, interaction):
        channel_id = interaction.data['values'][0]
        channel_data = self.config['voice_channels'][channel_id]
        
        await interaction.response.send_modal(
            EditChannelModal(self.user_id, self.config, self.parent_view, channel_id, channel_data)
        )

class EditChannelModal(Modal):
    """Modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Voice Channel"""
    
    def __init__(self, user_id, config, parent_view, channel_id, channel_data):
        super().__init__(title="‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Voice Channel", timeout=300)
        self.user_id = user_id
        self.config = config
        self.parent_view = parent_view
        self.channel_id = channel_id
        self.channel_data = channel_data
        
        self.empty_name = TextInput(
            label="‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤‡∏á (Empty Name)",
            placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏ô‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á (‡πÉ‡∏™‡πà 'skip' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡πâ‡∏≤‡∏°)",
            default=channel_data['empty_name'],
            required=True
        )
        self.add_item(self.empty_name)
        
        self.occupied_name = TextInput(
            label="‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô (Occupied Name)",
            placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á (‡πÉ‡∏™‡πà 'skip' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡πâ‡∏≤‡∏°)",
            default=channel_data['occupied_name'],
            required=True
        )
        self.add_item(self.occupied_name)
    
    async def on_submit(self, interaction):
        try:
            empty_name = self.empty_name.value
            occupied_name = self.occupied_name.value
            
            # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà 'skip'
            if empty_name.lower() != 'skip':
                self.config['voice_channels'][self.channel_id]['empty_name'] = empty_name
            
            if occupied_name.lower() != 'skip':
                self.config['voice_channels'][self.channel_id]['occupied_name'] = occupied_name
            
            save_config(self.config)
            
            updated_channel = self.config['voice_channels'][self.channel_id]
            embed = discord.Embed(
                title="‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Voice Channel ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
                description=f"‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç <#{self.channel_id}> ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß\n‚Ä¢ ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤‡∏á: `{updated_channel['empty_name']}`\n‚Ä¢ ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô: `{updated_channel['occupied_name']}`",
                color=discord.Color.green()
            )
            
            await interaction.response.send_message(embed=embed, ephemeral=True)
            
        except Exception as e:
            await interaction.response.send_message(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}", ephemeral=True)

class DeleteChannelSelectView(View):
    """View ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Voice Channel ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö"""
    
    def __init__(self, user_id, config, parent_view):
        super().__init__(timeout=60)
        self.user_id = user_id
        self.config = config
        self.parent_view = parent_view
        
        options = []
        for i, (channel_id, channel_data) in enumerate(config['voice_channels'].items()):
            options.append(discord.SelectOption(
                label=f"#{channel_id}",
                description=f"‡∏ß‡πà‡∏≤‡∏á: {channel_data['empty_name'][:50]}",
                value=channel_id
            ))
        
        select = Select(
            placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å voice channel ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö",
            options=options
        )
        select.callback = self.select_channel
        self.add_item(select)
    
    async def interaction_check(self, interaction):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ", ephemeral=True)
            return False
        return True
    
    async def select_channel(self, interaction):
        channel_id = interaction.data['values'][0]
        channel_data = self.config['voice_channels'][channel_id]
        
        await interaction.response.send_message(
            f"‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö <#{channel_id}> ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?",
            view=DeleteConfirmView(self.user_id, self.config, self.parent_view, channel_id, channel_data),
            ephemeral=True
        )

class DeleteConfirmView(View):
    """View ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö"""
    
    def __init__(self, user_id, config, parent_view, channel_id, channel_data):
        super().__init__(timeout=60)
        self.user_id = user_id
        self.config = config
        self.parent_view = parent_view
        self.channel_id = channel_id
        self.channel_data = channel_data
        
        confirm_button = Button(
            label="‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏•‡∏ö",
            style=discord.ButtonStyle.red
        )
        confirm_button.callback = self.confirm_delete
        self.add_item(confirm_button)
        
        cancel_button = Button(
            label="‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
            style=discord.ButtonStyle.grey
        )
        cancel_button.callback = self.cancel_delete
        self.add_item(cancel_button)
    
    async def interaction_check(self, interaction):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ", ephemeral=True)
            return False
        return True
    
    async def confirm_delete(self, interaction):
        try:
            deleted_channel = self.config['voice_channels'].pop(self.channel_id)
            save_config(self.config)
            
            embed = discord.Embed(
                title="‚úÖ ‡∏•‡∏ö Voice Channel ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
                description=f"‡∏•‡∏ö <#{self.channel_id}> ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
                color=discord.Color.green()
            )
            
            await interaction.response.edit_message(embed=embed, view=None)
            
        except Exception as e:
            await interaction.response.send_message(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}", ephemeral=True)
    
    async def cancel_delete(self, interaction):
        await interaction.response.edit_message(content="‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÅ‡∏•‡πâ‡∏ß", view=None)
