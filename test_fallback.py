"""
‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö Music Fallback
"""
import asyncio
from music_fallback import MusicFallback

async def test_fallback():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö fallback"""
    print("üîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö Music Fallback...")
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏•‡∏á
    test_queries = [
        "test song",
        "shape of you",
        "‡πÄ‡∏û‡∏•‡∏á‡πÑ‡∏ó‡∏¢",
        "popular music"
    ]
    
    for query in test_queries:
        print(f"\nüéµ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤: {query}")
        try:
            result = await MusicFallback.search_with_fallback(query)
            if result:
                print(f"‚úÖ ‡∏û‡∏ö‡πÄ‡∏û‡∏•‡∏á: {result.get('title', '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏ä‡∏∑‡πà‡∏≠')}")
                print(f"üìπ URL: {result.get('webpage_url', '‡πÑ‡∏°‡πà‡∏°‡∏µ URL')}")
            else:
                print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏û‡∏•‡∏á")
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
    
    print("\n‚úÖ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô")

if __name__ == "__main__":
    asyncio.run(test_fallback())
