"""
Migration script: Move credentials from credentials.json to .env
‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏¢‡πâ‡∏≤‡∏¢ credentials ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå JSON ‡πÑ‡∏õ‡∏¢‡∏±‡∏á .env
"""
import json
import os
from pathlib import Path

def migrate_credentials_to_env():
    """‡∏¢‡πâ‡∏≤‡∏¢ credentials ‡∏à‡∏≤‡∏Å credentials.json ‡πÑ‡∏õ .env"""
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå credentials.json ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if not os.path.exists('credentials.json'):
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå credentials.json")
        return False
    
    try:
        # ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å credentials.json
        with open('credentials.json', 'r', encoding='utf-8') as f:
            credentials = json.load(f)
        
        # ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå .env ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
        env_content = ""
        if os.path.exists('.env'):
            with open('.env', 'r', encoding='utf-8') as f:
                env_content = f.read()
        
        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Google Service Account
        # ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç private key ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô .env ‡πÑ‡∏î‡πâ
        private_key_escaped = credentials.get('private_key', '').replace('\n', '\\n')
        
        google_credentials = f"""
# Google Service Account Credentials
GOOGLE_SERVICE_ACCOUNT_TYPE="{credentials.get('type', '')}"
GOOGLE_PROJECT_ID="{credentials.get('project_id', '')}"
GOOGLE_PRIVATE_KEY_ID="{credentials.get('private_key_id', '')}"
GOOGLE_PRIVATE_KEY="{private_key_escaped}"
GOOGLE_CLIENT_EMAIL="{credentials.get('client_email', '')}"
GOOGLE_CLIENT_ID="{credentials.get('client_id', '')}"
GOOGLE_AUTH_URI="{credentials.get('auth_uri', '')}"
GOOGLE_TOKEN_URI="{credentials.get('token_uri', '')}"
GOOGLE_AUTH_PROVIDER_X509_CERT_URL="{credentials.get('auth_provider_x509_cert_url', '')}"
GOOGLE_CLIENT_X509_CERT_URL="{credentials.get('client_x509_cert_url', '')}"
GOOGLE_UNIVERSE_DOMAIN="{credentials.get('universe_domain', '')}"
"""
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Google ‡πÉ‡∏ô .env ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if 'GOOGLE_SERVICE_ACCOUNT_TYPE' not in env_content:
            env_content += google_credentials
            
            # ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ .env
            with open('.env', 'w', encoding='utf-8') as f:
                f.write(env_content)
            
            print("‚úÖ ‡∏¢‡πâ‡∏≤‡∏¢ credentials ‡∏à‡∏≤‡∏Å credentials.json ‡πÑ‡∏õ .env ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        else:
            print("‚ÑπÔ∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Google Service Account ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô .env ‡πÅ‡∏•‡πâ‡∏ß")
        
        # ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå credentials.json
        backup_name = 'credentials.json.backup'
        if not os.path.exists(backup_name):
            import shutil
            shutil.copy2('credentials.json', backup_name)
            print(f"‚úÖ ‡∏™‡∏≥‡∏£‡∏≠‡∏á credentials.json ‡πÄ‡∏õ‡πá‡∏ô {backup_name}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢ credentials: {e}")
        return False

def remove_credentials_json():
    """‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå credentials.json ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏¢‡πâ‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß"""
    try:
        if os.path.exists('credentials.json'):
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏£‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß
            if os.path.exists('credentials.json.backup'):
                os.remove('credentials.json')
                print("‚úÖ ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå credentials.json ‡πÅ‡∏•‡πâ‡∏ß (‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà)")
                return True
            else:
                print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå credentials.json ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏£‡∏≠‡∏á")
                return False
        else:
            print("‚ÑπÔ∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå credentials.json")
            return True
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå: {e}")
        return False

if __name__ == "__main__":
    print("üîÑ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢ credentials ‡∏à‡∏≤‡∏Å JSON ‡πÑ‡∏õ .env")
    print("=" * 50)
    
    if migrate_credentials_to_env():
        response = input("\nüóëÔ∏è ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå credentials.json ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? (y/N): ")
        if response.lower() in ['y', 'yes']:
            remove_credentials_json()
        else:
            print("‚ÑπÔ∏è ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå credentials.json ‡πÑ‡∏ß‡πâ")
    
    print("\n‚úÖ ‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô")
    print("üí° ‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏° credentials.json ‡πÉ‡∏ô .gitignore ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢")
