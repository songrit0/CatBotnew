"""
Config Manager - ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
‡πÉ‡∏ä‡πâ Google Sheets ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏´‡∏•‡πà‡∏á‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ config.json ‡πÅ‡∏•‡πâ‡∏ß
"""
import json
import os
from datetime import datetime
from sheets_manager import sheets_manager

def load_config():
    """‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å Google Sheets"""
    try:
        config = sheets_manager.get_config_from_sheets()
        print("‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å Google Sheets ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        return config
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤: {e}")
        return create_default_config()

def save_config(config):
    """‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏õ‡∏¢‡∏±‡∏á Google Sheets (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏•‡πå local ‡πÅ‡∏•‡πâ‡∏ß)"""
    try:
        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô config ‡∏•‡∏á Google Sheets
        success_count = 0
        total_keys = len(config)
        
        for key, value in config.items():
            if sheets_manager.update_config_value(key, value):
                success_count += 1
        
        if success_count == total_keys:
            print("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏•‡∏á Google Sheets ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
            return True
        else:
            print(f"‚ö†Ô∏è ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à {success_count}/{total_keys} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
            return False
            
    except Exception as e:
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏î‡πâ: {e}")
        return False

def create_default_config():
    """‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏ô Google Sheets"""
    default_config = {
        "voice_channels": {},
        "command_channel": None,
        "notification_channel": None,
        "music_settings": {
            "use_fallback": True,
            "max_retries": 3,
            "retry_delay": 2,
            "default_volume": 0.5,
            "max_queue_size": 50
        }
    }
    
    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Google Sheets
    if save_config(default_config):
        print("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏ô Google Sheets ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
    else:
        print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏ô Google Sheets ‡πÑ‡∏î‡πâ")
    
    return default_config

def get_voice_channel_config(channel_id):
    """‡∏î‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á voice channel ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏à‡∏≤‡∏Å Google Sheets"""
    return sheets_manager.get_voice_channel_config(channel_id)

def update_voice_channel_config(channel_id, empty_name, occupied_name):
    """‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á voice channel ‡πÉ‡∏ô Google Sheets"""
    return sheets_manager.update_voice_channel(channel_id, empty_name, occupied_name)

def remove_voice_channel_config(channel_id):
    """‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á voice channel ‡∏à‡∏≤‡∏Å Google Sheets"""
    return sheets_manager.remove_voice_channel(channel_id)

def update_command_channel(channel_id):
    """‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï command channel ‡πÉ‡∏ô Google Sheets"""
    return sheets_manager.update_config_value('command_channel', str(channel_id) if channel_id else None)

def update_notification_channel(channel_id):
    """‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï notification channel ‡πÉ‡∏ô Google Sheets"""
    return sheets_manager.update_config_value('notification_channel', str(channel_id) if channel_id else None)

def is_special_channel(channel_id):
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà"""
    config = load_config()
    command_channel_id = config.get("command_channel")
    if command_channel_id:
        return channel_id == int(command_channel_id)
    return False

def refresh_config_cache():
    """‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä cache ‡∏Ç‡∏≠‡∏á config ‡∏à‡∏≤‡∏Å Google Sheets"""
    sheets_manager.clear_cache()
    print("üîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä cache ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å Google Sheets")

def migrate_from_json():
    """‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å config.json ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Google Sheets (‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß)"""
    try:
        if not os.path.exists('config.json'):
            print("‚ÑπÔ∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå config.json ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
            return True
        
        with open('config.json', 'r', encoding='utf-8') as f:
            config_data = json.load(f)
        
        print("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å config.json ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Google Sheets...")
        
        # ‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á Google Sheets
        success = save_config(config_data)
        
        if success:
            # ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°
            backup_filename = f'config_backup_{datetime.now().strftime("%Y%m%d_%H%M%S")}.json'
            os.rename('config.json', backup_filename)
            print(f"‚úÖ ‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡∏π‡∏Å‡∏™‡∏≥‡∏£‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô {backup_filename}")
            return True
        else:
            print("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ")
            return False
            
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: {e}")
        return False
